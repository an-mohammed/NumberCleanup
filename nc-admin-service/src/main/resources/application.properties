#=======================================
#Application Configuration
#=======================================
info.version= 0.0.1
spring.application.name=NC-ADMIN-SERVICE
spring.application.admin.enabled=true
spring.application.admin.jmx-name=org.springframework.boot:type=Admin,name=NCService
spring.banner.location=classpath:DDBanner.txt
application.dynamic.config.location=file:D:/Satya/Repository/Diyar/NumberCleanup-OKW/nc-packager/dynamic_config/nc_dynamic_config_en
application.dynamic.config.cacheClean.seconds=5

#=======================================
#Logging Configuration
#=======================================
logging.file=D:/Satya/Client/Logs/NumberCleanup/${spring.application.name}/${spring.application.name}.log
logging.pattern.file=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx

#Logging level for different logger
logging.level.root=info
logging.level.com.netflix=off
logging.level.org.springframework.security=error
logging.level.org.springframework.ws.client.MessageTracing.sent=trace
logging.level.org.springframework.ws.server.MessageTracing.sent=trace
logging.level.org.springframework.ws.client.MessageTracing.received=trace
logging.level.org.springframework.ws.server.MessageTracing.received=trace
logging.level.com.sun.xml.wss.logging.impl.filter=debug
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.type.descriptor.sql=debug
logging.level.com.ooredoo.nc.utility.RequestResponseLoggingInterceptor=DEBUG

#=======================================
#Server Configuration
#=======================================
server.port=8882
server.compression.enabled=false
server.connection-timeout=30
server.servlet.session.persistent=false
server.tomcat.resource.allow-caching=false
jasypt.encryptor.password=D!rectDeb!tS3cr3t

#=======================================
#Discovery Server Configuration
#=======================================
eureka.client.service-url.defaultZone= http://localhost:8881/eureka
eureka.client.service-url.availabilityZone= http://localhost:8881/eureka
eureka.client.eureka-service-url-poll-interval-seconds=30
eureka.client.enabled=true
eureka.client.availability-zones.default=${APPLICATION_DOMAIN:${DOMAIN.defaultZone}}

# ===============================
# Spring boot admin client configuration
# ===============================
spring.boot.admin.client.enabled=true
spring.boot.admin.client.url=http://127.0.0.1:8880
spring.boot.admin.client.auto-registration=true
spring.boot.admin.client.auto-deregistration=true
spring.boot.admin.client.instance.prefer-ip=true
spring.boot.admin.client.register-once=true

management.endpoints.web.exposure.include=*
management.endpoint.shutdown.enabled=true
management.endpoints.enabled-by-default=true
management.endpoint.beans.enabled=true

#configs to give secured server info
spring.boot.admin.client.username=admin
spring.boot.admin.client.password=ENC(7HEFvovGd3CxrmdtYQB45w==)

# ===============================
# Spring boot domain data source
# ===============================

spring.datasource.url=jdbc:oracle:thin:@localhost:1521:XE
#spring.datasource.url=jdbc:hsqldb:hsql://localhost:9090/SIMCLEANUP
spring.datasource.name=DataSource
spring.datasource.username=CLEANUPUSER
spring.datasource.password=CLEANUPUSER
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.platform=oracle
spring.datasource.continue-on-error=false

# ===============================
# Ooredoo LDAP Authentication configuration
# ===============================
auth.ldap.controlFactories=com.sun.jndi.ldap.ControlFactory
auth.ldap.initalContextFactories=com.sun.jndi.ldap.LdapCtxFactory
auth.ldap.providerUrl=ldap://10.192.208.33:389
auth.ldap.securityAuthentication=simple
auth.ldap.securityPrincipal=wataniya.com
auth.ldap.bypass=true

# ===============================
# JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=none
spring.jpa.database=hsql


# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.Oracle9Dialect
spring.jpa.properties.hibernate.default_schema=CLEANUPUSER
spring.jpa.properties.hibernate.format_sql=true

#Change to trace to log the hibernate queries
spring.devtools.add-properties=false

#=======================================
#Scheduled job configuration
#=======================================
scheduled-job.default-value.initial-delay.miliseconds=60000

scheduled-job.bulk-activation.fixed-delay.miliseconds=120000
scheduled-job.bulk-activation.initial-delay.miliseconds=${scheduled-job.default-value.initial-delay.miliseconds}

scheduled-job.delete-bulk-activation-old-records.fixed-delay.miliseconds=86400000
scheduled-job.delete-bulk-activation-old-records.initial-delay.miliseconds=90000

scheduled-job.finish-assignment.fixed-delay.miliseconds=120000
scheduled-job.finish-assignment.initial-delay.miliseconds=120000

scheduled-job.delete-old-assignment.fixed-delay.miliseconds=120000
scheduled-job.delete-old-assignment.initial-delay.miliseconds=150000

#=======================================
#Spring Security WS Client credential and url
#=======================================

#Documentation
service.swagger.documentation.publish=true

service.baseurl=nc
consumer.service.baseurl=/nc

consumer.service.bscs.cleanup=${consumer.service.baseurl}/bscs/cleanup
consumer.service.bscs.getProfile=${consumer.service.baseurl}/bscs/getProfile
consumer.service.bscs.getProfileForValidation=${consumer.service.baseurl}/bscs/validationprofile

consumer.service.ras.cleanup=${consumer.service.baseurl}/ras/cleanup
consumer.service.nms.cleanup=${consumer.service.baseurl}/nms/cleanup
consumer.service.erp.cleanup=${consumer.service.baseurl}/erp/cleanup

service.usermanagement.base-url=${service.baseurl}/user
service.userrolemanagement.base-url=${service.baseurl}/urole
service.servicerolemanagement.base-url=${service.baseurl}/srole
service.privmanagement.base-url=${service.baseurl}/priv
service.serviceuser.base-url=${service.baseurl}/serviceuser
service.profilemanagement.base-url=${service.baseurl}/profile
service.numberpool.base-url=${service.baseurl}/numberpool
service.config.base-url=${service.baseurl}/config
service.subsprofile.base-url=${service.baseurl}/subscriber
service.disconnection.base-url=${service.baseurl}/disconnection
service.usrgrp.base-url=${service.baseurl}/ugrp
service.bulkactivation.base-url=${service.baseurl}/bactivation
service.bulkstatus.base-url=${service.baseurl}/status

consumer.service.bscs.getDbConfig=${consumer.service.baseurl}/bscs/getDBConfig
consumer.service.erp.getDbConfig=${consumer.service.baseurl}/erp/getDBConfig
consumer.service.nms.getDbConfig=${consumer.service.baseurl}/nms/getDBConfig
consumer.service.ras.getDbConfig=${consumer.service.baseurl}/ras/getDBConfig

consumer.service.ras.disconnection=${consumer.service.baseurl}/ras/pushDCRequest


